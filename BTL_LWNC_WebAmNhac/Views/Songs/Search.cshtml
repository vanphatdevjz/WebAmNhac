@model IEnumerable<BTL_LWNC_WebAmNhac.Models.Song>

@using System.Security.Claims;
@{
    ViewData["Title"] = "Index";
    Layout = "_Songs";
}
@if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("admin")))
{
    <div>
        <p>
            <a asp-action="Create">Create New</a>
        </p>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        ID
                    </th>
                    <th>
                        Tên bài hát
                    </th>
                    <th>
                        Nghệ sĩ
                    </th>
                    <th>
                        Lời bài hát
                    </th>
                    <th>
                        Ảnh bìa
                    </th>
                    <th>
                        Nguồn
                    </th>
                    <th>
                        Thể loại
                    </th>
                    <th>
                        Lượt xem
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Artist.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Lyric)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Thumbnail)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Url)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Genre.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ViewCount)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

else
{
    <div class="music-box">
        @foreach (var item in Model)
        {
            <div class="music-div">
                <div class="music-info">
                    <div class="music-img">
                        <img src="@item.Thumbnail">
                    </div>
                    <div class="music-name">
                        <h6>@item.Name</h6>
                        <p>@item.Artist?.Name</p>
                    </div>
                    <div class="music-genre">
                        <p>@item.Genre?.Name</p>
                    </div>
                    <div class="music-action">
                        <div id="playIcon" onclick="redirectToDetails('@item.ID')"><i class="fa fa-play" aria-hidden="true"></i></div>
                        <div id="playInNewTab" onclick="playInNewTab('@item.ID')"><i class="fa fa-clone" aria-hidden="true"></i></div>
                        @if (User.Identity.IsAuthenticated && (User.IsInRole("User") || User.IsInRole("user")))
                        {
                            <div class="add-playlist" onclick="showList(event,'@item.ID')">
                                <i class="fa fa-plus-square-o" aria-hidden="true" onclick="showList(event, '@item.ID');addPlaylist(event,'@item.ID')"></i>
                            </div>
                        }
                    </div>
                </div>
                <hr>
            </div>
        }
    </div>

@await Component.InvokeAsync("UserPlaylist")
<script>
    function addPlaylist(event, songID) {
        console.log("go to func...");
        $(".userPlaylist").on("click", ".list-item", function () {
            var playlistID = $(this).data("id");
            console.log("playlistID add to playlist:", playlistID);
            console.log("songID add to playlist:", songID);
            var url = '/PlaylistDetails/addToPlaylistDetail/?playlistID=' + playlistID + '&songID=' + songID;
            $.ajax({
                type: "POST",
                url: url,
                dataType: "json",
                success: function (data) {
                    if (data.success) {
                        alert("add successfully");
                        console.log("success add to playlist detail");
                    } else {
                        console.log("fail01");
                        alert("Failed to add");
                    }
                },
                error: function () {
                    console.log("fail00");
                    alert("Have a error while adding");
                }
            });
        });
    }
</script>

<script src="/js/showPlaylist.js"></script>
}